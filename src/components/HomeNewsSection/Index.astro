---
// The idea here is to show the 3 most recent items for each feed
import { getCollection } from 'astro:content';

import CalendarItem from '../CalendarFeed/Item.astro';
import NewsItem from './NewsItem.astro';

const calEntries = await getCollection('calendar');
const newsEntries = await getCollection('news');
// const newsEntries = await getCollection('news', ({ data }) => {
//   console.log('YO!', data);
//   return true;
// });
console.log('YO!', newsEntries);

const sortedCalEntries = calEntries.sort((a, b) => {
  return new Date(b.data.date) - new Date(a.data.date);
});

const recentNews = newsEntries
  .sort((a, b) => new Date(b.data.date) - new Date(a.data.date))
  .slice(0, 3);
---

<style>
  [data-prose] {
    @apply w-full max-w-screen-md lg:max-w-screen-xl mx-auto px-4 lg:px-6;
    @apply grid grid-cols-12 gap-4 lg:gap-8;

    > section:first-of-type {
      @apply col-span-12 lg:col-span-8;
      @apply order-2 lg:order-1;
    }

    > section:last-of-type {
      /* order first on mobile */
      @apply order-1 lg:order-2;
      @apply col-span-12 lg:col-span-4;
    }
  }

  [data-collection='news'] > li {
    @apply p-0;
  }

  footer a {
    @apply relative py-1 no-underline;

    &::after {
      /* via GitHub marketing style for `a.link-mktg` */
      content: '';
      position: absolute;
      bottom: -2px;
      left: 0;
      width: calc(100% - 1em);
      height: 2px;
      pointer-events: none;
      background-color: currentColor;
      transform: scaleX(0);
      transform-origin: 0 0;
      transition: transform 0.3s ease;
    }

    &:hover {
      @apply text-red dark:text-yellow;
      &::after {
        transform: scaleX(1);
      }
    }
  }
</style>

<section class="my-20 sm:my-28 md:my-32 lg:my-20">
  <div data-prose>
    <section>
      <h2 class="mb-6 text-center text-2xl md:text-3xl lg:text-4xl font-bold">
        News
      </h2>
      <ol data-collection="news">
        {
          recentNews.map((entry) => (
            // left off adding plain color to these left borders... the idea is to stop applying
            // the bg gradient to all left borders and only use that in the vibrant destination
            // home section, and any other unique part of the ui but not these left borders in
            // feeds
            <li class="mb-4">
              <article>
                <NewsItem entry={entry} />
              </article>
            </li>
          ))
        }
      </ol>
    </section>

    <section>
      <h2 class="mb-6 text-center text-2xl md:text-3xl lg:text-4xl font-bold">
        Calendar
      </h2>
      <ol data-collection="calendar">
        {
          sortedCalEntries.map((entry) => (
            <li class="mb-4 box-shadow">
              <article>
                <CalendarItem entry={entry} />
              </article>
            </li>
          ))
        }
      </ol>
    </section>
    <footer class="order-3 col-span-12 flex align-center justify-center">
      <a class="text-3xl text-dmWhite no-underline" href="/news">More news â†’</a>
    </footer>
  </div>
</section>
